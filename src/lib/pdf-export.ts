import jsPDF from "jspdf";
import autoTable from "jspdf-autotable";
import type { Escrow } from "@/types/escrow.entity";

export interface PDFExportOptions {
  title?: string;
  includeFilters?: boolean;
  orientation?: "portrait" | "landscape";
}

export const exportEscrowsToPDF = (
  escrows: Escrow[],
  options: PDFExportOptions = {},
) => {
  const { title = "My Escrows Report", orientation = "landscape" } = options;

  // Create new PDF document
  const doc = new jsPDF({
    orientation,
    unit: "mm",
    format: "a4",
  });

  // Add header with title
  doc.setFontSize(22);
  doc.setFont("helvetica", "bold");
  doc.text(title, 20, 25);

  // Add generation info
  doc.setFontSize(10);
  doc.setFont("helvetica", "normal");
  doc.text(
    `Generated on: ${new Date().toLocaleDateString()} at ${new Date().toLocaleTimeString()}`,
    20,
    35,
  );
  doc.text(`Total Escrows: ${escrows.length}`, 20, 42);

  // Calculate summary statistics
  const totalAmount = escrows.reduce(
    (sum, escrow) => sum + (escrow.amount || 0),
    0,
  );
  const totalBalance = escrows.reduce(
    (sum, escrow) => sum + (escrow.balance || 0),
    0,
  );
  const activeEscrows = escrows.filter(
    (e) => !e.flags?.released && !e.flags?.disputed,
  ).length;
  const releasedEscrows = escrows.filter((e) => e.flags?.released).length;
  const disputedEscrows = escrows.filter((e) => e.flags?.disputed).length;

  // Add summary section
  doc.setFontSize(12);
  doc.setFont("helvetica", "bold");
  doc.text("Summary", 20, 55);

  doc.setFontSize(9);
  doc.setFont("helvetica", "normal");
  doc.text(`Total Contract Value: $${totalAmount.toLocaleString()}`, 20, 63);
  doc.text(`Current Balance: $${totalBalance.toLocaleString()}`, 20, 70);
  doc.text(
    `Active: ${activeEscrows} | Released: ${releasedEscrows} | Disputed: ${disputedEscrows}`,
    20,
    77,
  );

  // Prepare table data with better formatting
  const tableData = escrows.map((escrow) => [
    escrow.title || "No Title",
    escrow.description || "No Description",
    `$${(escrow.amount || 0).toLocaleString()}`,
    `$${(escrow.balance || 0).toLocaleString()}`,
    escrow.engagementId || "N/A",
    escrow.type === "single-release" ? "Single" : "Multi",
    escrow.createdAt
      ? new Date(escrow.createdAt._seconds * 1000).toLocaleDateString()
      : "N/A",
    escrow.flags?.released
      ? "Released"
      : escrow.flags?.disputed
        ? "Disputed"
        : "Active",
  ]);

  // Add table with improved styling
  autoTable(doc, {
    head: [
      [
        "Title",
        "Description",
        "Amount",
        "Balance",
        "Engagement",
        "Type",
        "Created",
        "Status",
      ],
    ],
    body: tableData,
    startY: 85,
    styles: {
      fontSize: 8,
      cellPadding: 3,
      overflow: "linebreak",
    },
    headStyles: {
      fillColor: [52, 73, 94],
      textColor: 255,
      fontStyle: "bold",
      fontSize: 9,
    },
    alternateRowStyles: {
      fillColor: [248, 249, 250],
    },
    columnStyles: {
      0: { cellWidth: 35 },
      1: { cellWidth: 45 },
      2: { cellWidth: 25, halign: "right" },
      3: { cellWidth: 25, halign: "right" },
      4: { cellWidth: 30 },
      5: { cellWidth: 20 },
      6: { cellWidth: 25 },
      7: { cellWidth: 20 },
    },
    margin: { top: 85, right: 15, bottom: 25, left: 15 },
  });

  // Add footer with page numbers and branding
  const pageCount = doc.getNumberOfPages();
  for (let i = 1; i <= pageCount; i++) {
    doc.setPage(i);
    doc.setFontSize(8);
    doc.setTextColor(128, 128, 128);

    // Page number
    doc.text(
      `Page ${i} of ${pageCount}`,
      doc.internal.pageSize.width - 30,
      doc.internal.pageSize.height - 10,
    );

    // Footer text
    doc.text(
      "Generated by TrustlessWork Escrow",
      20,
      doc.internal.pageSize.height - 10,
    );
  }

  // Save the PDF with timestamp
  const timestamp = new Date().toISOString().split("T")[0];
  const fileName = `escrows-report-${timestamp}.pdf`;
  doc.save(fileName);
};
